name: Daily Minecraft Mob Heads

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  get_heads:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        pip install beautifulsoup4

    - name: Create mobs directory
      run: mkdir -p mobs

    - name: Run heads script
      run: |
        cat << EOT > get_heads.py
        import requests
        from bs4 import BeautifulSoup
        import re
        import os
        
        # URL from which we'll extract tables
        url = "https://minecraft.fandom.com/wiki/Mob"
        
        # Fetch the content from the URL
        response = requests.get(url)
        content = response.content
        
        # Parse the HTML content
        soup = BeautifulSoup(content, 'html.parser')
        
        # Find all <table> tags
        tables = soup.find_all('table')
        
        bad = ["mob", "beast_boy", "black_steve", "rana", "steve", "monster", "diamond_chicken", "love_golem", "mars", "moon_cow", "nerd_creeper", "pink_wither", "pony", "ray_tracing", "redstone_bug", "smiling_creeper"]
        
        # Optional: Print each table's HTML
        for i, table in enumerate(tables, start=1):
          title = table.get('data-description')
          if len(table.find_all("tr")) == 2 and title != "Unimplemented mobs":
            for (img_row, name_row) in zip(table.find_all("tr")[0].find_all("td"), table.find_all("tr")[1].find_all("td")):
                mob_url = img_row.find("img").get("data-src").split("?")[0]
                # Check if re match https:\/\/static\.wikia\.nocookie\.net\/minecraft_gamepedia\/images\/.+?\/.+?\/.+?\.png\/revision\/latest
                if not re.match(r"https:\/\/static\.wikia\.nocookie\.net\/minecraft_gamepedia\/images\/.+?\/.+?\/.+?\.png\/revision\/latest", mob_url) or \
                   ("[" in name_row.text and "]" in name_row.text):
                  continue
                
                mob = name_row.text.lower().replace(" ", "_").replace("\n", "")
          
                if mob == "pufferfish_(defensive)": mob = "pufferfish"
                if mob == "iron_golem_(naturally_spawned)": mob = "iron_golem"
                if mob in bad: continue
        
                if os.path.exists(f"mobs/{mob}.png"):
                  continue
        
                # Write to file the image
                with open(f"mobs/{mob}.png", "wb") as f:
                  f.write(requests.get(mob_url).content)
        EOT
        python get_heads.py

    - name: Commit and push changes
      env:
        PAT: ${{ secrets.PAT }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/
        git commit -m "Update heads data" -a || echo "No changes to commit"
        git push https://${PAT}@github.com/${GITHUB_REPOSITORY}.git HEAD:${GITHUB_REF}
